Git - Hệ thống quản lý phiên bản
- lưu trạng thái của file dưới dạng lịch sử cập nhật
- có thể đưa file đã chỉnh sửa về trạng thái cũ hay hiển thị sự khác biệt ở những dòng chỉnh sửa
- khi chia sẻ file trong một nhóm, server sẽ hiện ra cảnh báo khi có hiện tượng ghi đè/ xoá mất các nội dung 

- Repository là nơi ghi lại trạng thái thay đổi của file, được chia thành local repository và remote repository.
	+ Local repository: là repository trên máy tính cá nhân
	+ Remote repository: là repository trên server, nơi nhiều người có thể truy cập. Được sử dụng khi ta muốn upload các công việc của bản thân hoặc muốn truy cập công việc của người khác.

1/ git init: tạo một local repository mới
2/ git clone: sao chép một repository đã tồn tại trên server về máy
3/ git status: để check trạng thái các file trong git
4/ git add ten_file: để cập nhật file từ working directory vào staging area
5/ git status: để check lại xem các file mong muốn đã ready để được commit hay chưa

- Commit để ghi lại việc thêm/thay đổi file vào repository. Khi thực hiện commit, trong repository sẽ ghi lại sự khác biệt từ trạng thái đã commit lần trước đến trạng thái commit gần nhất. Các commit được ghi lại theo thứ tự thời gian.

6/ git commit -m "Mục đích của việc commit"
7/ Sau khi đã commit file vào local repository, dùng git log để kiểm tra lại xem file đã được commit chưa
8/ Để đồng bộ local repository lên server, dùng lệnh git remote add origin để xác định địa chỉ trên online repository mà git cần push file lên
9/ Dùng lệnh git push -u origin master để push file lên branch master trên github
10/ Sau khi push, source code đã có trên git hub
11/ git checkout commit: để trở về một version nào đã được commit trước đó
12/ git show : để xem đã có thay đổi gì trong đợt commit đó
13/ git diff : theo dõi sự thay đổi trong những lần commit

- Branch dùng để ghi lại trạng thái thay đổi của nhánh. Các thay đổi trong một branch không ảnh hưởng đến branch master hay các branch khác. 
- Khi làm 1 project, sẽ có nhiều thành viên đồng thời chỉnh sửa cùng lúc. Vì vậy cần dùng branch. Các thành viên của nhóm sẽ tạo branch nhánh cho riêng mình để không ảnh hưởng đến công việc của các thành viên khác. Sau đó, những thành viên đã hoàn thành công việc merge các thay đổi vào branch chính. 
- Trong trường hợp nhiều thành viên cùng chỉnh sửa một vấn đề và tạo conflict thì sẽ dễ tìm ra những thay đổi và giải quyết vấn đề nhanh hơn.

14/ git branch new_branch: để tạo một nhánh khác 
15/ git checkout new_branch: để chuyển đổi sang nhánh new_branch
16/ git merge: đồng bộ hoá các thay đổi của nhiều branch khác nhau vào branch master
17/ Khi có conflict, resolve bằng tay, chọn phần nào mình muốn push lên 
18/ Issues: Khi có một số chỗ cần sửa đổi trong repository, mình có thể comment ý kiến vào repository đó. Sau đó người quản trị có thể click vào issue và xem xét, thay đổi. Khi sửa đổi hoàn tất thì sẽ đóng issue đó lại. 
18/ Pull requests: là chức năng thông báo với chủ repository về các thay đổi đã được đẩy lên Github. Chủ repository review lại các thay đổi và có thể chấp thuận cho merge hay không.



